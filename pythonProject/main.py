import streamlit as st
from PIL import Image
import requests
from io import BytesIO
import json
import openai


def main():
    # streamlit config and styles
    st.set_page_config(page_title="RuTube", page_icon="✔")
    # ---- HIDE STREAMLIT STYLE ----
    hide_st_style = """<style>footer {visibility: hidden;}</style>"""
    st.markdown(hide_st_style, unsafe_allow_html=True)
    st.markdown("<h1 style='text-align: center; color: #fff; font-size: 4.5rem;'>RuTube<span style='color:#ED143B;'>˙</span></h1>",
                unsafe_allow_html=True)
    st.write("<br><br>", unsafe_allow_html=True)

    # OpenAI api keys
    openai.api_key = "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"  # your Openai api key

    # user prompt
    image_desc = st.text_area("Опишите изображение для ИИ(желательно на английском): ")

    # center 'generate' button using streamlit hack
    col1, col2, col3 = st.columns(3)
    with col1:
        pass
    with col3:
        pass
    with col2:
        center_button = st.button("Сгенерировать")

    # streamlit code control
    if len(image_desc) > 0:
        ai_image = openai.Image.create(
            prompt=image_desc,
            n=1,
            size="1024x1024"
        )
        # process json data from openai
        data_obj = json.dumps(ai_image.data)
        json_obj = json.loads(data_obj)

        # retrieve url link
        for get_image_url in json_obj:
            image_url = get_image_url['url']

        # process image
        response = requests.get(image_url)
        img = Image.open(BytesIO(response.content))

        st.write("<hr><br>", unsafe_allow_html=True)

        # show image
        try:
            st.image(img, caption='generated by: OpenAi (1024x1024)')
        except:
            st.write("Error: Try another image request, this request violates our Openai safety policy")


if __name__ == '__main__':
    main()